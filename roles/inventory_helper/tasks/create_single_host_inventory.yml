---
- name: Get config from environment variables
  set_fact:
    consul_url: "{{ lookup('env', 'CONSUL_URL') }}"
    consul_token: "{{ lookup('env', 'CONSUL_TOKEN') }}"
    vault_url: "{{ lookup('env', 'VAULT_URL') }}"
    vault_approle_role_id: "{{ lookup('env', 'VAULT_APPROLE_ROLE_ID') }}"
    vault_approle_secret_id: "{{ lookup('env', 'VAULT_APPROLE_SECRET_ID') }}"
  no_log: true
- assert:
    that:
      - resource_id
      - (consul_url is defined) and (consul_url|length > 0)
      - (consul_token is defined) and (consul_token|length > 0)
      - (vault_url is defined) and (vault_url|length > 0)
      - (vault_approle_role_id is defined) and (vault_approle_role_id|length > 0)
      - (vault_approle_secret_id is defined) and (vault_approle_secret_id|length > 0)

- name: Install required pip packaged
  ansible.builtin.pip:
    name: hvac

- set_fact:
    vault_lookup_base_info: "url={{ vault_url }} auth_method=approle role_id={{ vault_approle_role_id }} secret_id={{ vault_approle_secret_id }}"

- set_fact:
    filter_exp: "{{ 'ID==\"' + resource_id + '\"' | urlencode() }}"

- name: "Get Node info of resource with id '{{ resource_id }}'"
  uri:
    url: "{{ consul_url }}/v1/catalog/nodes?filter={{ filter_exp }}"
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      Authorization: "Bearer {{ consul_token }}"
  register: output_get_node

- set_fact:
    node_info: "{{ output_get_node.json | first }}"

- name: "Get Remote Access Service of Node based on resource with id '{{ resource_id }}'"
  uri:
    url: "{{ consul_url }}/v1/catalog/node-services/{{ node_info.Node }}?filter={{ filter | urlencode() }}"
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      Authorization: "Bearer {{ consul_token }}"
  register: output_get_remote_access_service
  vars:
    filter: '"RemoteAccessService" in Tags'

- name: Fail because resource has no remote access service
  ansible.builtin.fail:
    msg: No remote access service has been found
  when: output_get_remote_access_service.json.Services | length == 0

- name: Set Remote Access Service
  ansible.builtin.set_fact:
    remote_access_service: "{{ output_get_remote_access_service.json.Services | first }}"

- name: Set resource credentials
  set_fact:
    ip_address: "{{ node_info.Address }}"
    username: "{{ lookup('hashi_vault', '{{ vault_lookup_base_info }} secret=resources/data/{{ remote_access_service.ID }}/CredentialUsernamePassword:username') }}"
    password: "{{ lookup('hashi_vault', '{{ vault_lookup_base_info }} secret=resources/data/{{ remote_access_service.ID }}/CredentialUsernamePassword:password') }}"
  no_log: true

- name: Setup ansible inventory
  add_host:
    name: "{{ ip_address }}"
    groups: target_host
    ansible_connection: ssh
    ansible_port: "{{ remote_access_service.Port | default(22, true) }}"
    ansible_ssh_user: "{{ username }}"
    ansible_ssh_pass: "{{ password }}"
    ansible_become_pass: "{{ password }}"
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  no_log: true